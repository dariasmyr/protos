syntax = "proto3";
import "google/protobuf/empty.proto";

package auth;

option go_package = "sso/gen";

service Auth {
  rpc RegisterClient (RegisterClientRequest) returns (RegisterClientResponse);
  rpc Register (RegisterRequest) returns (RegisterResponse);
  rpc Login (LoginRequest) returns (LoginResponse);
  rpc Logout (LogoutRequest) returns (LogoutResponse);
  rpc ChangePassword (ChangePasswordRequest) returns (ChangePasswordResponse);
  rpc ChangeStatus (ChangeStatusRequest) returns (ChangeStatusResponse);
}

service Sessions {
  rpc GetActiveSessions(google.protobuf.Empty) returns (GetActiveAccountSessionsResponse);
  rpc RefreshSession(google.protobuf.Empty) returns (RefreshAccountSessionResponse);
  rpc ValidateSession(google.protobuf.Empty) returns (ValidateAccountSessionResponse);
  rpc RevokeSession(RevokeAccountSessionRequest) returns (RevokeAccountSessionResponse);
}

message RegisterClientRequest {
  string app_name = 1;
  string secret = 2;
  string redirect_url = 3;
}

message RegisterClientResponse {
  int64 app_id = 1;
}

message RegisterRequest {
  string email = 1;
  string password = 2;
  AccountRole role = 3;
}

message RegisterResponse {
  int64 account_id = 1;
}

message LoginRequest {
  string email = 1;
  string password = 2;
}

message LoginResponse {
  int64 account_id = 1;
  string token = 2;
  string refresh_token = 3;
}

message LogoutRequest {
  int64 account_id = 1;
}

message LogoutResponse {
  bool success = 1;
}

message ChangePasswordRequest {
  string old_password = 1;
  string new_password = 2;
}

message ChangePasswordResponse {
  bool success = 1;
}

message ChangeStatusRequest {
  int64 account_id = 1;
  AccountStatus status = 2;
}

message ChangeStatusResponse {
  int64 account_id = 1;
  AccountStatus status = 2;
}

message GetActiveAccountSessionsResponse {
  repeated Session sessions = 1;
}

message RefreshAccountSessionResponse {
  string token = 1;
  string refresh_token = 2;
  int64 expires_at = 3;
}

message ValidateAccountSessionResponse {
  bool valid = 1;
}

message RevokeAccountSessionRequest {
  string token = 1;
}

message RevokeAccountSessionResponse {
  bool token = 1;
  bool revoked = 2;
}

message Session {
  int64 account_id = 1;
  string token = 2;
  string refresh_token = 3;
  string user_agent = 4;
  string ip_address = 5;
  int64 expires_at = 6;
  int64 refresh_expires_at = 7;
  int64 created_at = 8;
  int64 updated_at = 9;
  bool revoked = 10;
}

enum AccountStatus {
  ACTIVE = 0;
  INACTIVE = 1;
  DELETED = 2;
}

enum AccountRole {
  USER = 0;
  ADMIN = 1;
}
